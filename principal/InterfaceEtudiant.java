package projetTutore;

import javax.swing.JScrollPane;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;

import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.xml.transform.TransformerConfigurationException;

import jsyntaxpane.DefaultSyntaxKit;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Quentin
 */
public class InterfaceEtudiant extends java.awt.Frame {

	/**
	 * Creates new form InterfaceEtudiant
	 */
	public InterfaceEtudiant() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		panneau = new javax.swing.JPanel();
		ennonceExercice = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		editeurTexte = new javax.swing.JEditorPane();
		boutonExerciceSuivant = new javax.swing.JButton();
		boutonExercicePrec1 = new javax.swing.JButton();
		boutonIndice = new javax.swing.JButton();
		fenetreIndice = new javax.swing.JTextArea();
		boutonTable = new javax.swing.JButton();
		boutonValider = new javax.swing.JButton();

		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});

		panneau.setBackground(new java.awt.Color(249, 249, 249));

		ennonceExercice.setBackground(new java.awt.Color(249, 249, 249));
		ennonceExercice.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		ennonceExercice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		ennonceExercice.setText("Ennoncé de l'exercice");
		ennonceExercice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		editeurTexte.setBorder(null);
		jScrollPane1.setViewportView(editeurTexte);

		boutonExerciceSuivant.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		boutonExerciceSuivant.setText("Question suivante");
		boutonExerciceSuivant.setToolTipText("");
		boutonExerciceSuivant.setBorder(null);
		boutonExerciceSuivant.setMaximumSize(new java.awt.Dimension(110, 25));
		boutonExerciceSuivant.setMinimumSize(new java.awt.Dimension(110, 25));
		boutonExerciceSuivant.setPreferredSize(new java.awt.Dimension(110, 25));
		boutonExerciceSuivant.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				boutonExerciceSuivantActionPerformed(evt);
			}
		});

		boutonExercicePrec1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		boutonExercicePrec1.setText("Contexte de l'exercice");
		boutonExercicePrec1.setMaximumSize(new java.awt.Dimension(110, 25));
		boutonExercicePrec1.setMinimumSize(new java.awt.Dimension(110, 25));
		boutonExercicePrec1.setPreferredSize(new java.awt.Dimension(110, 25));
		boutonExercicePrec1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					boutonExercicePrec1(evt);
					System.out.println("ONRDTFG");
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}


		});
		
		
		boutonIndice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		boutonIndice.setText("Importer un exercice");
		boutonIndice.setMaximumSize(new java.awt.Dimension(110, 25));
		boutonIndice.setMinimumSize(new java.awt.Dimension(110, 25));
		boutonIndice.setPreferredSize(new java.awt.Dimension(110, 25));
		boutonIndice.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				boutonIndiceActionPerformed(evt);
			}
		});

		fenetreIndice.setEditable(false);
		fenetreIndice.setBackground(new java.awt.Color(249, 249, 249));
		fenetreIndice.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		//fenetreIndice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		fenetreIndice.setText("Affichage des indices ");
		fenetreIndice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		//fenetreIndice.addActionListener(new java.awt.event.ActionListener() {
		//	public void actionPerformed(java.awt.event.ActionEvent evt) {
		//		fenetreIndiceActionPerformed(evt);
		//	}
		//});

		boutonTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		boutonTable.setText("Afficher les tables");
		boutonTable.setMaximumSize(new java.awt.Dimension(110, 25));
		boutonTable.setMinimumSize(new java.awt.Dimension(110, 25));
		boutonTable.setPreferredSize(new java.awt.Dimension(110, 25));
		boutonTable.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				boutonTableActionPerformed(evt);
			}
		});

		boutonValider.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		boutonValider.setText("Valider la réponse");
		boutonValider.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
				boutonValiderActionPerformed(evt);
			}catch(IndexOutOfBoundsException i) {
				System.out.println("erreur bouton valider" + i);
			}
			}
				
		});

		javax.swing.GroupLayout panneauLayout = new javax.swing.GroupLayout(panneau);
		panneau.setLayout(panneauLayout);
		panneauLayout.setHorizontalGroup(
				panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panneauLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
								.addComponent(ennonceExercice))
						.addGap(18, 18, 18)
						.addGroup(panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(boutonTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(boutonExerciceSuivant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(boutonExercicePrec1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(boutonIndice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(fenetreIndice, javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(boutonValider, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
						.addContainerGap())
				);
		panneauLayout.setVerticalGroup(
				panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panneauLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(panneauLayout.createSequentialGroup()
										.addComponent(boutonExerciceSuivant, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(boutonExercicePrec1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(boutonIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(ennonceExercice))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1)
								.addGroup(panneauLayout.createSequentialGroup()
										.addComponent(fenetreIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(boutonTable, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(boutonValider, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)))
						.addContainerGap())
				);



		//editeurTexte.setText("Votre code ici");
		add(panneau, java.awt.BorderLayout.CENTER);
		panneau.setVisible(true);
		//  panneauLayout.add
		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Exit the Application
	 */
	private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
		System.exit(0);
	}//GEN-LAST:event_exitForm

	
	private void boutonExercicePrec1(ActionEvent evt) throws SQLException {
		// TODO Auto-generated method stub
		String contexte = Test.bdd.info();
		JOptionPane jop1 = new JOptionPane();
		jop1.showMessageDialog(null, contexte, "Information", JOptionPane.INFORMATION_MESSAGE);
		
	}
	private void boutonExerciceSuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonExerciceSuivantActionPerformed
		// TODO add your handling code here:
		if(Test.exercice.numQuestion+1>=Test.exercice.exercice.size()) {
			ecrireErreur("Fin de l'exercice");
			/*
			 * 
			 * 
			 * FIN DE L'EXO
			 * GENERER LE XML REPONSE
			 * 
			 * 
			 * 
			 * 
			 */
			try {
				System.out.println("FIN");
				JOptionPane jop1 = new JOptionPane();
				jop1.showMessageDialog(null, "Exercice terminé.\nUn fichier résultat à été généré.", "Information", JOptionPane.INFORMATION_MESSAGE);
				Test.xmlFin();
			} catch (TransformerConfigurationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		try {
		Test.exercice.numQuestion++;
		Test.xmlQuestionSuivante();
		ecrireEnonce(Test.exercice.exercice.get(Test.exercice.numQuestion).enonce);
		}catch(java.lang.IndexOutOfBoundsException e) {
			ecrireErreur("Fin de l'exercice");
		}
	}//GEN-LAST:event_boutonExerciceSuivantActionPerformed

	private void boutonIndiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fenetreIndiceActionPerformed
		// TODO add your handling code here:
		
		File repertoireCourant = null;
		try {
			repertoireCourant = new File(".").getCanonicalFile();
			repertoireCourant= new File(repertoireCourant+"/save");
			System.out.println("Répertoire courant : " + repertoireCourant);
		} catch(IOException e) {
			
		}
	
		JFileChooser dialogue = new JFileChooser(repertoireCourant);
		dialogue.showOpenDialog(null);
		File choix = dialogue.getSelectedFile();
		System.out.println("Fichier choisi : " + dialogue.getSelectedFile() +" et donc :"+choix);
		try
		{
			ObjectInputStream ois = new ObjectInputStream (new FileInputStream (choix));
			Test.exercice = (Exercice) ois.readObject();
			ois.close();
			Test.exercice.titre=choix.getName();
			System.out.println ("Exercice importé");
			
			String testt = Test.exercice.preambule;
			System.out.println(testt);
			System.out.println(Test.exercice.initialisation);
			String query = Test.exercice.initialisation;
			ArrayList<String> arrayQuery = new ArrayList<>();
			query.replaceAll("\n|\r", "");
			ArrayList<String> list = new ArrayList<String>(Arrays.asList(query.split(";")));
			
			System.out.println(Test.exercice.initialisation);
			for(int i=0;i<list.size();i++) {
				Test.bdd.reqSQL(list.get(i), 'm');
			}

		}
		catch (ClassNotFoundException exception)
		{
			
			System.out.println ("Impossible de lire l'objet : " + exception.getMessage());
			exception.printStackTrace();
		}
		catch (IOException exception)
		{
			System.out.println ("Erreur lors de l'ouverture : " + exception.getMessage());
			
		}	
		
		//Test.exercice = Test.exercice.importation(filename);
		

		
	}//GEN-LAST:event_fenetreIndiceActionPerformed

	private void boutonTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonTableActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_boutonTableActionPerformed

	public void ecrireIndice(String indice) {
		fenetreIndice.setForeground(new Color(64, 64, 64));
		fenetreIndice.setText(indice);
	}

	public void ecrireErreur(String erreur) {
		fenetreIndice.setForeground(new Color(155, 20, 20));
		fenetreIndice.setText("\n\n\n\n\n\n\n\n\n\n"+erreur);
		Test.xmlReponse("Erreur : "+erreur);
	}
	public void correct() {
		fenetreIndice.setForeground(new Color(20, 200, 20));
		fenetreIndice.setText("\n\n\n\n\n\n\n\n\tRéponse correct !");
		Test.xmlReponse("Correct");
		Test.nbEssais=0;
	}
	private void boutonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonValiderActionPerformed
		// TODO add your handling code here:
		Test.xmlProposition(editeurTexte.getText());
		Test.nbEssais++;
		try {
			if(Test.analyseR.compareReponse(editeurTexte.getText(),Test.exercice.exercice.get(Test.exercice.numQuestion).reponse )) {
				correct();
			}
		}catch(java.lang.NullPointerException e){
			System.out.println(" < bouton valider  >Une erreur est survenue NULL POINTER EXECEPTION");
		}finally {
			System.out.println("  < bouton valider  > Une erreur est survenue...");
		}
	}//GEN-LAST:event_boutonValiderActionPerformed

	public void afficheContexte(String contexte) {
		JOptionPane jop1 = new JOptionPane();
		jop1.showMessageDialog(null, contexte, "Information", JOptionPane.INFORMATION_MESSAGE);
	}
	/**
	 * @param args the command line arguments
	 */

	/*
	 * 
	 * 
	 * 
	 * 
	 * 
	 */

	/*

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceEtudiant().setVisible(true);
            }
        });
    }

	 */

	/*
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 */

	public void ecrireEnonce(String enonce) {
		ennonceExercice.setText(enonce);
		Test.xmlReponse("Question : "+enonce);
		Test.xmlReponse("Réponse attendue : "+Test.exercice.exercice.get(Test.exercice.numQuestion).reponse);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton boutonExercicePrec1;
	private javax.swing.JButton boutonExerciceSuivant;
	private javax.swing.JButton boutonIndice;
	private javax.swing.JButton boutonTable;
	private javax.swing.JButton boutonValider;
	private javax.swing.JEditorPane editeurTexte;
	private javax.swing.JTextField ennonceExercice;
	private javax.swing.JTextArea fenetreIndice;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JPanel panneau;
	// End of variables declaration//GEN-END:variables


}
