package projetTutore;


import java.awt.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 *
 * @author anis
 */
public class creationFrame extends javax.swing.JFrame {

    // not graphicals attributes
    private static Exercice exo;

    /**
     * Creates new form creatFrame
     */
    public creationFrame() {
        exo = new Exercice();
        initComponents();
        setVisible(true);
    }

    public static Exercice getExo() {
        return exo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tPreambule = new javax.swing.JTextArea();
        tCheminFichierSQL = new javax.swing.JTextField();
        lPreambule = new javax.swing.JLabel();
        lFichierSQL = new javax.swing.JLabel();
        bRecherche = new javax.swing.JButton();
        bValider = new javax.swing.JButton();
        lQuestions = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tQuestion = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tReponse = new javax.swing.JTextArea();
        bAjouterQuestion = new javax.swing.JButton();
        lNbQuestions = new javax.swing.JLabel();
        bQSuivante = new javax.swing.JButton();
        bQPrecedente = new javax.swing.JButton();
        bSupprQ = new javax.swing.JButton();
        lFichier = new javax.swing.JLabel();
        tNomFichier = new javax.swing.JTextField();
        bCharger = new javax.swing.JButton();
        lOu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Création d'exercice");
        setName("fenetre"); // NOI18N
        setResizable(false);

        jScrollPane1.setToolTipText("");
        jScrollPane1.setName(""); // NOI18N

        tPreambule.setColumns(20);
        tPreambule.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        tPreambule.setRows(5);
        tPreambule.setText("(Préambule...)");
        tPreambule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPreambuleMouseClicked(evt);
            }
        });
        tPreambule.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tPreambuleKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tPreambule);
        tPreambule.getAccessibleContext().setAccessibleName("");

        tCheminFichierSQL.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        tCheminFichierSQL.setText("Entrez le chemin du fichier");
        tCheminFichierSQL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tCheminFichierSQLFocusGained(evt);
            }
        });

        lPreambule.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lPreambule.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lPreambule.setText("Préambule :");
        lPreambule.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lPreambule.setName("lPreambule"); // NOI18N

        lFichierSQL.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lFichierSQL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lFichierSQL.setText("Chargement du fichier SQL :");
        lFichierSQL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bRecherche.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bRecherche.setText("Rechercher");
        bRecherche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
					bRechercheMouseClicked(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        bValider.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        bValider.setText("Valider E.");
        bValider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bValiderMouseClicked(evt);
                JOptionPane jop1 = new JOptionPane();
        		jop1.showMessageDialog(null, "Exercice crée", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        });

        lQuestions.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lQuestions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lQuestions.setText("Questions");
        lQuestions.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tQuestion.setColumns(20);
        tQuestion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        tQuestion.setRows(5);
        tQuestion.setText("Entrez l'énoncé de la question.");
        tQuestion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tQuestionFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(tQuestion);

        tReponse.setColumns(20);
        tReponse.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        tReponse.setRows(5);
        tReponse.setText("Reponse (requête SQL)");
        tReponse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tReponseFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(tReponse);

        bAjouterQuestion.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        bAjouterQuestion.setText("Ajouter Q.");
        bAjouterQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAjouterQuestionMouseClicked(evt);
            }
        });

        lNbQuestions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lNbQuestions.setText("1");

        bQSuivante.setText("+");
        bQSuivante.setToolTipText("");
        bQSuivante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bQSuivanteMouseClicked(evt);
            }
        });

        bQPrecedente.setText("-");
        bQPrecedente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bQPrecedenteMouseClicked(evt);
            }
        });

        bSupprQ.setText("X");
        bSupprQ.setToolTipText("");
        bSupprQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSupprQMouseClicked(evt);
            }
        });

        lFichier.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lFichier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lFichier.setText("Fichier :");
        lFichier.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lFichier.setName("lPreambule"); // NOI18N

        tNomFichier.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        tNomFichier.setText("Nom du fichier à créer (sans extension)");
        tNomFichier.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tNomFichierFocusGained(evt);
            }
        });
        tNomFichier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tNomFichierMouseClicked(evt);
            }
        });

        bCharger.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        bCharger.setText("Charger un fichier");
        bCharger.setActionCommand("Charger");
        bCharger.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bChargerMouseClicked(evt);
            }
        });

        lOu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lOu.setText("OU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lNbQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bSupprQ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bQSuivante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bQPrecedente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)))
                            .addComponent(bAjouterQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bValider, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                    .addComponent(lFichier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lQuestions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
                                .addComponent(lPreambule, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lFichierSQL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(tCheminFichierSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tNomFichier, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lOu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bCharger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lPreambule, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lFichier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tNomFichier, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCharger, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lOu, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lFichierSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCheminFichierSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bQSuivante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lNbQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(bQPrecedente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bSupprQ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bAjouterQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bValider, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tCheminFichierSQL.getAccessibleContext().setAccessibleName("tCheminFichierSQL");
        lPreambule.getAccessibleContext().setAccessibleName("");
        lPreambule.getAccessibleContext().setAccessibleDescription("");
        lFichierSQL.getAccessibleContext().setAccessibleName("lFichierSQL");
        bRecherche.getAccessibleContext().setAccessibleName("");
        bValider.getAccessibleContext().setAccessibleName("");
        lQuestions.getAccessibleContext().setAccessibleName("");
        bAjouterQuestion.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleName("fenetre");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tPreambuleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPreambuleMouseClicked
        tPreambule.selectAll();
    }//GEN-LAST:event_tPreambuleMouseClicked

    private void tCheminFichierSQLFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tCheminFichierSQLFocusGained
        tCheminFichierSQL.selectAll();
        
    }//GEN-LAST:event_tCheminFichierSQLFocusGained

    private void bRechercheMouseClicked(java.awt.event.MouseEvent evt) throws IOException {//GEN-FIRST:event_bRechercheMouseClicked
        final JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);
        String path;
        File file = fc.getSelectedFile();
        if (file != null) {
            path = file.getAbsolutePath();
            tCheminFichierSQL.setText(path);
        }
        java.util.List<String> s;
        s=Files.readAllLines(file.toPath());
        System.out.println(s);
		JOptionPane jop1 = new JOptionPane();
		jop1.showMessageDialog(null, "", "Information", JOptionPane.INFORMATION_MESSAGE);
		String s2="";
		for(int i=0;i<s.size();i++) {
			s2=s2+s.get(i);
		}
		System.out.println(s2);
		exo.initialisation=s2;
		
		
		
		
    }//GEN-LAST:event_bRechercheMouseClicked

    
    
    private void tQuestionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tQuestionFocusGained
        tQuestion.selectAll();
    }//GEN-LAST:event_tQuestionFocusGained

    private void tReponseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tReponseFocusGained
        tReponse.selectAll();
    }//GEN-LAST:event_tReponseFocusGained

    private void bAjouterQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAjouterQuestionMouseClicked
        String q = tQuestion.getText();
        String r = tReponse.getText();
        String s_numQ = lNbQuestions.getText();
        int numQ = Integer.parseInt(s_numQ);
        int nbQ = exo.getNbQuestions();

        String enonce = tQuestion.getText();
        String reponse = tReponse.getText();
        if ((numQ - 1) == nbQ) { // ajout de question
            if (/*chaines non vide*/(!q.equalsIgnoreCase("")) && (!r.equalsIgnoreCase(""))) {
                Question question = new Question(enonce, reponse);
                exo.ajouterQuestion(question);
                nbQ = exo.getNbQuestions();
                lNbQuestions.setText("" + (nbQ + 1));
                // System.err.println("etat 1");
                tQuestion.setText("");
                tReponse.setText("");
            } else {
                System.err.println("Un des champs énoncé ou réponse est vide.");
            }
        } else { // modif de question
            if ((!q.equalsIgnoreCase("")) && (!r.equalsIgnoreCase(""))) {
                exo.getQuestions().get(numQ - 1).setEnonce(enonce);
                exo.getQuestions().get(numQ - 1).setReponse(reponse);
                lNbQuestions.setText("" + (nbQ + 1));
                // System.err.println("etat 2");
                tQuestion.setText("");
                tReponse.setText("");
            }
        }

        // affichage exo
        System.out.println("EXO : \n" + exo);
    }//GEN-LAST:event_bAjouterQuestionMouseClicked

    private void tPreambuleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tPreambuleKeyPressed
    }//GEN-LAST:event_tPreambuleKeyPressed

    private void bValiderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bValiderMouseClicked
        exo.setPreambule(tPreambule.getText());

        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println("");
        System.err.println(exo);

        /*recuperation du nom si précisé*/
        String nFic = tNomFichier.getText();

        if (!nFic.equalsIgnoreCase("") && !nFic.equalsIgnoreCase("Nom du fichier à créer (sans extension)")) {
            /*serailisation*/
            System.err.println("exportation...");
            exo.exportation(nFic + ".ser");
        } else {
            System.err.println("Nom du fichier incorrect.");
        }
    }//GEN-LAST:event_bValiderMouseClicked

    /**
     * rempli les champs enonce et reponse avec le contenu de la question
     * suivante
     *
     * @param evt
     */
    private void bQSuivanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bQSuivanteMouseClicked
        String s_numQ = lNbQuestions.getText();
        int numQ = Integer.parseInt(s_numQ);
        int nbQ = exo.getNbQuestions();

        if (/*pos sur nouvelle ou dernière Q*/(numQ >= nbQ)) { // si question suivante n'existe pas
            System.err.println("Nouvelle question");
            lNbQuestions.setText("" + (nbQ + 1));
            tQuestion.setText("");
            tReponse.setText("");
        } else { // si elle existe
            Question q = exo.getQuestions().get(numQ); // question suivante
            String enonce = q.getEnonce();
            String reponse = q.getReponse();
            tQuestion.setText(enonce);
            tReponse.setText(reponse);
            lNbQuestions.setText("" + (numQ + 1));
        }
    }//GEN-LAST:event_bQSuivanteMouseClicked

    /**
     * rempli les champs enonce et reponse avec le contenu de la question
     * précédente
     *
     * @param evt
     */
    private void bQPrecedenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bQPrecedenteMouseClicked
        String s_numQ = lNbQuestions.getText();
        int numQ = Integer.parseInt(s_numQ);
        int nbQ = exo.getNbQuestions();

        if (/*pos sur nouvelle ou première Q*/(numQ == 1)) { // si question précédente n'existe pas
            System.err.println("Question précédente n'existe pas");
        } else { // si elle existe
            Question q = exo.getQuestions().get(numQ - 2); // question précédente (numQ-1 => question courante)
            String enonce = q.getEnonce();
            String reponse = q.getReponse();
            tQuestion.setText(enonce);
            tReponse.setText(reponse);
            lNbQuestions.setText("" + (numQ - 1));
        }
    }//GEN-LAST:event_bQPrecedenteMouseClicked

    /**
     * supprime la question courante si elle a déjà été ajoutée
     *
     * @param evt
     */
    private void bSupprQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSupprQMouseClicked
        String s_numQ = lNbQuestions.getText();
        int numQ = Integer.parseInt(s_numQ); // numéro de question affiché
        int nbQ = exo.getNbQuestions(); // nombre de questions déjà enregistrées dans l'exercice

        if (/*placé sur nouvelle question*/(numQ > nbQ)) { // si la question courante n'existe pas
            System.err.println("Aucune question à supprimer");
        } else { // si elle existe
            exo.supprimerQuestion(numQ - 1); // suppression de la question courante
            nbQ = exo.getNbQuestions();
            lNbQuestions.setText("" + (nbQ + 1));
            tQuestion.setText("");
            tReponse.setText("");
        }
    }//GEN-LAST:event_bSupprQMouseClicked

    private void tNomFichierFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tNomFichierFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tNomFichierFocusGained

    private void bChargerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bChargerMouseClicked
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);
        File file = fc.getSelectedFile();
        if (file != null) {
            String path = file.getAbsolutePath();
            
            /*importation ser*/
 /*
            System.err.println("importation...");
            Exercice e = exo.importation(path);
            System.out.println(e);
            exo = e;
            tPreambule.setText(exo.getPreambule());
            tQuestion.setText(exo.getQuestions().get(0).getEnonce());
            tReponse.setText(exo.getQuestions().get(0).getReponse());    
             */
 /*importation xml*/
            try {
                //Obtenir la configuration du sax parser
                SAXParserFactory spfactory = SAXParserFactory.newInstance();
                //Obtenir une instance de l'objet parser
                SAXParser saxParser = spfactory.newSAXParser();

                DefaultHandler handler = new DefaultHandler() {
                    boolean bpreambule, bquestion, benonce, breponse;
                    Exercice newE = new Exercice();
                    int nbq = 0;
                    
                    public void startElement(String uri, String localName,
                        String qName, Attributes attributes) throws SAXException {
                        
                        if (qName.equalsIgnoreCase("preambule")) {
                            bpreambule = true;
                        }
                        
                        if (qName.equalsIgnoreCase("question")) {
                            bquestion = true;
                        }

                        if (qName.equalsIgnoreCase("enonce")) {
                            benonce = true;
                        }

                        if (qName.equalsIgnoreCase("reponse")) {
                            breponse = true;
                        }
                    }

                    public void endElement(String uri, String localName,
                        String qName) throws SAXException {

                        if (qName.equalsIgnoreCase("preambule")) {
                            bpreambule = false;
                            exo = newE;
                        }

                        if (qName.equalsIgnoreCase("question")) {
                            bquestion = false;
                        }

                        if (qName.equalsIgnoreCase("enonce")) {
                            benonce = false;
                        }

                        if (qName.equalsIgnoreCase("reponse")) {
                            breponse = false;
                        }
                    }

                    public void characters(char ch[], int start,
                        int length) throws SAXException {

                        if (bpreambule) {
                            System.out.println("preambule : "
                                + new String(ch, start, length));
                            newE.setPreambule(new String(ch, start, length));
                            bpreambule = false;
                        }

                        if (bquestion) {
                            System.out.println("question : "
                                + new String(ch, start, length));
                            newE.ajouterQuestion(new Question());
                            bquestion = false;
                        }

                        if (benonce) {
                            System.out.println("enonce : "
                                + new String(ch, start, length));
                            newE.getQuestions().get(nbq).setEnonce(new String(ch, start, length));
                            benonce = false;
                        }
                        
                        if (breponse) {
                            System.out.println("reponse: "
                                + new String(ch, start, length));
                            newE.getQuestions().get(nbq).setReponse(new String(ch, start, length));
                            breponse = false;
                            nbq++;
                        }
                    }

                };
                
                saxParser.parse(path, handler);
                
                tPreambule.setText(exo.getPreambule());
                tQuestion.setText(exo.getQuestions().get(0).getEnonce());
                tReponse.setText(exo.getQuestions().get(0).getReponse());
                lNbQuestions.setText("1");
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_bChargerMouseClicked

    private void tNomFichierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tNomFichierMouseClicked
        // TODO add your handling code here:
        tNomFichier.setText("");
    }//GEN-LAST:event_tNomFichierMouseClicked

    /**
     * ############################################## # # # LANCEMENT DE
     * L'APPLICATION # # # ##############################################
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(creationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(creationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(creationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(creationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* création et affichage de la fenêtre */
 /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new creationFrame().setVisible(true);

            }
        });
         */
        creationFrame f = new creationFrame();

    }

    /**
     * VARIABLES AUTOMATIQUEMENT GÉNÉRÉES PAR NETBEAN (cf onglet "Design")
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAjouterQuestion;
    private javax.swing.JButton bCharger;
    private javax.swing.JButton bQPrecedente;
    private javax.swing.JButton bQSuivante;
    private javax.swing.JButton bRecherche;
    private javax.swing.JButton bSupprQ;
    private javax.swing.JButton bValider;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lFichier;
    private javax.swing.JLabel lFichierSQL;
    private javax.swing.JLabel lNbQuestions;
    private javax.swing.JLabel lOu;
    private javax.swing.JLabel lPreambule;
    private javax.swing.JLabel lQuestions;
    private javax.swing.JTextField tCheminFichierSQL;
    private javax.swing.JTextField tNomFichier;
    private javax.swing.JTextArea tPreambule;
    private javax.swing.JTextArea tQuestion;
    private javax.swing.JTextArea tReponse;
    // End of variables declaration//GEN-END:variables
}
